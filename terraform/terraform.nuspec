<?xml version="1.0" encoding="utf-8"?>
<!-- Do not remove this test for UTF-8: if ??? doesn?t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
  <metadata>
    <!-- Read this before publishing packages to chocolatey.org: https://github.com/chocolatey/chocolatey/wiki/CreatePackages -->
    <id>terraform</id>
    <title>Terraform</title>
    <version>0.9.7</version>
    <authors>Mitchell Hashimoto, HashiCorp</authors>
    <owners>James Toyer</owners>
    <summary>Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently. Terraform can manage existing and popular service providers as well as custom in-house solutions.</summary>
    <description>
Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently. Terraform can manage existing and popular service providers as well as custom in-house solutions.

The key features of Terraform are:

* **Infrastructure as Code**: Infrastructure is described using a high-level configuration syntax. This allows a blueprint of your datacenter to be versioned and treated as you would any other code. Additionally, infrastructure can be shared and re-used.
* **Execution Plans**: Terraform has a "planning" step where it generates an *execution plan*. The execution plan shows what Terraform will do when you call apply. This lets you avoid any surprises when Terraform manipulates infrastructure.
* **Resource Graph**: Terraform builds a graph of all your resources, and parallelizes the creation and modification of any non-dependent resources. Because of this, Terraform builds infrastructure as efficiently as possible, and operators get insight into dependencies in their infrastructure.
* **Change Automation**: Complex changesets can be applied to your infrastructure with minimal human interaction. With the previously mentioned execution plan and resource graph, you know exactly what Terraform will change and in what order, avoiding many possible human errors.

For more information, see the [introduction section](http://www.terraform.io/intro) of the Terraform website.
    </description>
    <releaseNotes>
## 0.9.7 (June 7, 2017)

BACKWARDS INCOMPATIBILITIES / NOTES:

* The `lock_table` attribute in the S3 backend configuration has been deprecated in favor of `dynamodb_table`, which better reflects that the table is no longer only used for locks. [GH-14949]

FEATURES:

* **New Data Source:** `aws_elastic_beanstalk_solution_stack` [GH-14944]
* **New Data Source:** `aws_elasticache_cluster` [GH-14895]
* **New Data Source:** `aws_ssm_parameter` [GH-15035]
* **New Data Source:** `azurerm_public_ip` [GH-15110]
* **New Resource:** `aws_ssm_parameter` [GH-15035]
* **New Resource:** `aws_ssm_patch_baseline` [GH-14954]
* **New Resource:** `aws_ssm_patch_group` [GH-14954]
* **New Resource:** `librato_metric` [GH-14562]
* **New Resource:** `digitalocean_certificate` [GH-14578]
* **New Resource:** `vcd_edgegateway_vpn` [GH-13123]
* **New Resource:** `vault_mount` [GH-14456]
* **New Interpolation Function:** `bcrypt` [GH-14725]

IMPROVEMENTS:

* backend/consul: Storing state to Consul now uses Check-And-Set (CAS) by default to avoid inconsistent state, and will automatically attempt to re-acquire a lock if it is lost during Terraform execution. [GH-14930]
* core: Remote state is now persisted more frequently to minimize data loss in the event of a crash. [GH-14834]
* provider/alicloud: Add the function of replacing ecs instance's system disk [GH-15048]
* provider/aws: Expose RDS instance and cluster resource id [GH-14882]
* provider/aws: Export internal tunnel addresses + document [GH-14835]
* provider/aws: Fix misleading error in aws_route validation [GH-14972]
* provider/aws: Support import of `aws_lambda_event_source_mapping` [GH-14898]
* provider/aws: Add support for a configurable timeout in db_option_group [GH-15023]
* provider/aws: Add task_parameters parameter to `aws_ssm_maintenance_window_task` resource [GH-15104]
* provider/aws: Expose reason of EMR cluster termination [GH-15117]
* provider/aws: `data.aws_acm_certificate` can now filter by `type` [GH-15063]
* provider/azurerm: Ignore case sensivity in Azurerm resource enums [GH-14861]
* provider/digitalocean: Add support for changing TTL on DigitalOcean domain records. [GH-14805]
* provider/google: Add ability to import Google Compute persistent disks [GH-14573]
* provider/google: `google_container_cluster.master_auth` should be optional [GH-14630]
* provider/google: Add CORS support for `google_storage_bucket` [GH-14695]
* provider/google: Allow resizing of Google Cloud persistent disks [GH-15077]
* provider/google: Add `private_ip_google_access` update support to `google_compute_subnetwork` [GH-15125]
* provider/heroku: can now import Heroku Spaces [GH-14973]
* provider/kubernetes: Upgrade K8S from 1.5.3 to 1.6.1 [GH-14923]
* provider/kubernetes: Provide more details about why PVC failed to bind [GH-15019]
* provider/kubernetes: Allow sourcing `config_path` from `KUBECONFIG` env var [GH-14889]
* provider/openstack: Add support provider networks [GH-10265]
* provider/openstack: Allow numerical protocols in security group rules [GH-14917]
* provider/openstack: Sort request/response headers in debug output [GH-14956]
* provider/openstack: Add support for FWaaS routerinsertion extension [GH-12589]
* provider/openstack: Add Terraform version to UserAgent string [GH-14955]
* provider/openstack: Optimize the printing of debug output [GH-15086]
* provisioner/chef: Use `helpers.shema.Provisoner` in Chef provisioner V2 [GH-14681]

BUG FIXES:

* provider/alicloud: set `alicloud_nat_gateway` zone to be Computed to avoid perpetual diffs [GH-15050]
* provider/alicloud: set provider to read env vars for access key and secrey key if empty strings [GH-15050]
* provider/alicloud: Fix vpc and vswitch bugs while creating vpc and vswitch [GH-15082]
* provider/alicloud: Fix allocating public ip bug [GH-15049]
* provider/alicloud: Fix security group rules nic_type bug [GH-15114]
* provider/aws: ForceNew `aws_launch_config` on ebs_block_device change [GH-14899]
* provider/aws: Avoid crash when EgressOnly IGW disappears [GH-14929]
* provider/aws: Allow IPv6/IPv4 addresses to coexist [GH-13702]
* provider/aws: Expect exception on deletion of APIG Usage Plan Key [GH-14958]
* provider/aws: Fix panic on nil `dead_letter_config` [GH-14964]
* provider/aws: Work around IAM eventual consistency in CW Log Subs [GH-14959]
* provider/aws: Fix ModifyInstanceAttribute on new instances [GH-14992]
* provider/aws: Fix issue with removing tags in `aws_cloudwatch_log_group` [GH-14886]
* provider/aws: Raise timeout for VPC DHCP options creation to 5 mins [GH-15084]
* provider/aws: Retry Redshift cluster deletion on InvalidClusterState [GH-15068]
* provider/aws: Retry Lambda func creation on IAM error [GH-15067]
* provider/aws: Retry ECS service creation on ClusterNotFoundException [GH-15066]
* provider/aws: Retry ECS service update on ServiceNotFoundException [GH-15073]
* provider/aws: Retry DB parameter group delete on InvalidDBParameterGroupState [GH-15071]
* provider/aws: Guard against panic when no `aws_default_vpc` found [GH-15070]
* provider/aws: Guard against panic if no NodeGroupMembers returned in `elasticache_replication_group` [GH-13488]
* provider/aws: Revoke default ipv6 egress rule for `aws_security_group` [GH-15075]
* provider/aws: Lambda ENI deletion fails on destroy [GH-11849]
* provider/aws: Add gov and cn hosted zone Ids to aws_elb_hosted_zone data source [GH-15149]
* provider/azurerm: VM - making `os_profile` optional [GH-14176]
* provider/azurerm: Preserve the Subnet properties on Update [GH-13877]
* provider/datadog: make `datadog_user` verified a computed attribute [GH-15034]
* provider/datadog: use correct evaluation_delay parameter [GH-14878]
* provider/digitalocean: Refresh DO loadbalancer from state if 404 [GH-14897]
* provider/github: Do not set incorrect values in github_team data source [GH-14859]
* provider/google: use a mutex to prevent concurrent sql instance operations [GH-14424]
* provider/google: Set instances to computed in `compute_instance_group` [GH-15025]
* provider/google: Make `google_compute_autoscaler` use Update instead of Patch. [GH-15101]
* provider/kubernetes: Ignore internal k8s labels in `kubernetes_persistent_volume` [GH-13716]
* provider/librato: Add retry to `librato_alert` [GH-15118]
* provider/postgresql: Fix for leaking credentials in the provider [GH-14817]
* provider/postgresql: Drop the optional WITH token from CREATE ROLE. [GH-14864]
* provider/rancher: refresh `rancher_host` from state on nil or removed host [GH-15015]

## Previous Releases
For more information on previous releases, check out the changelog on [GitHub](https://github.com/hashicorp/terraform/blob/v0.9.7/CHANGELOG.md).
    </releaseNotes>
    <projectUrl>http://www.terraform.io</projectUrl>
    <docsUrl>https://www.terraform.io/docs/index.html</docsUrl>
    <bugTrackerUrl>https://github.com/hashicorp/terraform/issues</bugTrackerUrl>
    <projectSourceUrl>https://github.com/hashicorp/terraform</projectSourceUrl>
    <packageSourceUrl>https://github.com/jamestoyer/chocolatey-packages</packageSourceUrl>
    <tags>terraform hashicorp</tags>
    <copyright>HashiCorp 2015-2017</copyright>
    <licenseUrl>https://github.com/hashicorp/terraform/blob/master/LICENSE</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <!-- Important note about https://cdn.rawgit.com: Files are cached permanently after the first request. Use commit URLs when updating the icon. -->
    <iconUrl>https://raw.githubusercontent.com/jamestoyer/chocolatey-packages/58ab86c08224c2ba79af2080346c53c1cc440afc/terraform/icons/terraform.png</iconUrl>
    <!--<dependencies>
      <dependency id="" version="" />
    </dependencies>-->
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
